{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\murad\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\novademy-admin\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { login as apiLogin, logout as apiLogout, getCurrentUser } from '../api/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check auth status on load\n    const checkAuthStatus = async () => {\n      try {\n        const userData = getCurrentUser();\n        setUser(userData);\n      } catch (err) {\n        console.error('Auth check failed:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n  const login = async (email, password) => {\n    setError(null);\n    setIsLoading(true);\n    try {\n      const userData = await apiLogin(email, password);\n      setUser(userData);\n    } catch (err) {\n      console.error(\"Login failed:\", err);\n      setError(err.message || 'Giriş zamanı xəta baş verdi');\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      await apiLogout();\n    } catch (err) {\n      console.error(\"Logout failed:\", err);\n    } finally {\n      setUser(null);\n    }\n  };\n  const value = {\n    user,\n    isLoading,\n    error,\n    login,\n    logout,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'Admin',\n    isTeacher: (user === null || user === void 0 ? void 0 : user.role) === 'Teacher'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"caAZa649wyY9nHJT6au393y4yCs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","login","apiLogin","logout","apiLogout","getCurrentUser","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","error","setError","checkAuthStatus","userData","err","console","email","password","message","value","isAuthenticated","isAdmin","role","isTeacher","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/murad/Desktop/Новая папка (2)/novademy-admin/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext, ReactNode } from 'react';\r\nimport { User, login as apiLogin, logout as apiLogout, getCurrentUser } from '../api/authService';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n  isAdmin: boolean;\r\n  isTeacher: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Check auth status on load\r\n    const checkAuthStatus = async () => {\r\n      try {\r\n        const userData = getCurrentUser();\r\n        setUser(userData);\r\n      } catch (err) {\r\n        console.error('Auth check failed:', err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    setError(null);\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const userData = await apiLogin(email, password);\r\n      setUser(userData);\r\n    } catch (err: any) {\r\n      console.error(\"Login failed:\", err);\r\n      setError(err.message || 'Giriş zamanı xəta baş verdi');\r\n      throw err;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await apiLogout();\r\n    } catch (err) {\r\n      console.error(\"Logout failed:\", err);\r\n    } finally {\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isLoading,\r\n    error,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.role === 'Admin',\r\n    isTeacher: user?.role === 'Teacher'\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}